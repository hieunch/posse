//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/communication/routing/base/RBAMessage.msg.
//

#ifndef _RBAMESSAGE_M_H_
#define _RBAMESSAGE_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include "GeoMathHelper.h"
    #include "Common.h"
    #include "RoutingPacket_m.h"
// }}

/**
 * Class generated from <tt>src/node/communication/routing/base/RBAMessage.msg:11</tt> by nedtool.
 * <pre>
 * packet RBAData extends RoutingPacket
 * {
 *     Point destLocation;
 *     int packetId;
 * }
 * </pre>
 */
class RBAData : public ::RoutingPacket
{
  protected:
    Point destLocation_var;
    int packetId_var;

  private:
    void copy(const RBAData& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RBAData&);

  public:
    RBAData(const char *name=NULL, int kind=0);
    RBAData(const RBAData& other);
    virtual ~RBAData();
    RBAData& operator=(const RBAData& other);
    virtual RBAData *dup() const {return new RBAData(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual Point& getDestLocation();
    virtual const Point& getDestLocation() const {return const_cast<RBAData*>(this)->getDestLocation();}
    virtual void setDestLocation(const Point& destLocation);
    virtual int getPacketId() const;
    virtual void setPacketId(int packetId);
};

inline void doPacking(cCommBuffer *b, RBAData& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, RBAData& obj) {obj.parsimUnpack(b);}


#endif // ifndef _RBAMESSAGE_M_H_

